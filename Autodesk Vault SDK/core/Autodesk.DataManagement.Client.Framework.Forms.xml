<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Autodesk.DataManagement.Client.Framework.Forms</name>
  </assembly>
  <members>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Library.UITheme">
      <summary>Supported Vault UI theme options enum.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Library.UITheme.Classic">
      <summary>Classic theme.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Library.UITheme.Light">
      <summary>Light theme.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Library.UITheme.Dark">
      <summary>Dark theme.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Library">
      <summary>Provides a gateway to all features and services in the Autodesk.DataManagement.Client.Framework.Forms assembly</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ConfigurePrompts(System.Object)">
      <summary>Launches a GUI workflow to allow users to configure prompts that have been registered with the
.</summary>
      <returns>The button clicked by the user.</returns>
      <param name="helpContext">An object that will be passed to the custom help handler when the configure prompts dialog's help button is clicked.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.GetProgressView(System.String,System.String,System.Collections.Generic.IEnumerable{Autodesk.DataManagement.Client.Framework.Currency.ProgressValue},System.Int32)">
      <summary>Launches a new instance of a Progress Dialog</summary>
      <returns>An interface which can be used to control the state of the Progress Dialog</returns>
      <param name="caption">The caption to appear in the Progress Dialog</param>
      <param name="header">The top level header describing the current state of an operation</param>
      <param name="values">A list of information values to display in the Progress Dialog</param>
      <param name="perc">The Percent complete. If -1, the dialog will use a cylon progress indicator instead of a percentage based indicator</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.Initialize">
      <summary>Initializes the services in this assembly. This should be called on application startup.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.SetCulture(System.Globalization.CultureInfo)">
      <summary>Sets the culture that this assembly and its dependencies will use when returning resources.</summary>
      <param name="info">The culture to set</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowRestrictions(Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings)">
      <summary>Launches a GUI workflow to display a list of restrictions to the user.</summary>
      <returns>The button clicked by the user.</returns>
      <param name="settings">Contains the restrictions to be displayed as well as options that control the behavior of the GUI.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowError(System.Exception,System.String)">
      <summary>Displays an error dialog box which displays information about a specific exception.</summary>
      <returns>The windows DialogResult which describes the button that was selected. In this case, the result will always be DialogResult.OK</returns>
      <param name="ex">The exception object to display information for.</param>
      <param name="title">The caption of the dialog box.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowError(System.String,System.String)">
      <summary>Displays an error dialog box with the specified message.</summary>
      <returns>The windows DialogResult which describes the button that was selected. In this case, the result will always be DialogResult.OK</returns>
      <param name="message">The error text to display in the dialog box.</param>
      <param name="title">The caption of the dialog box.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowError(System.String,System.String,System.String,System.String)">
      <summary>Displays an error dialog box with the specified message and optionally, a link to launch help.</summary>
      <returns>The windows DialogResult which describes the button that was selected. In this case, the result will always be DialogResult.OK</returns>
      <param name="message">The error text to display in the dialog box.</param>
      <param name="title">The Caption of the dialog box.</param>
      <param name="helpTopic">Help topic to be displayed as link text</param>
      <param name="helpTopicId">Identifier of the help topic</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowError(System.String,System.String,System.String,System.Action)">
      <summary>Displays an error dialog box with the specified message and optionally, a link to launch help.</summary>
      <param name="message">The error text to display in the dialog box.</param>
      <param name="title">The Caption of the dialog box.</param>
      <param name="helpTopic">Help topic to be displayed as link text</param>
      <param name="helpAction">A delegate that takes care of launching help</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowMessage(System.String,System.String,System.String,System.Action,System.Boolean)">
      <summary>Displays a message or error dialog box with the specified message and optionally, a link to launch help.</summary>
      <returns>The windows DialogResult which describes the button that was selected. The following chart shows the possible return codes for each button.

<list type="table"><listheader><term>Button</term><description>Return Code</description></listheader><item><term>"Abort", "Skip All"</term><description>DialogResult.Abort</description></item><item><term>"Cancel"</term><description>DialogResult.Cancel</description></item><item><term>"No"</term><description>DialogResult.No</description></item><item><term>"OK"</term><description>DialogResult.OK</description></item><item><term>"Retry"</term><description>DialogResult.Retry</description></item><item><term>"Skip"</term><description>DialogResult.Ignore</description></item><item><term>"Yes"</term><description>DialogResult.Yes</description></item></list></returns>
      <param name="message">The message text to display in the dialog box.</param>
      <param name="title">The Caption of the dialog box.</param>
      <param name="helpTopic">Help topic to be displayed as link text</param>
      <param name="helpAction">A delegate that takes care of launching help</param>
      <param name="isError">Bool value indecating which dialog type to display, Error or Info</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowMessage(System.String,System.String,Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration)">
      <summary>Displays a message box with the specified text, caption, and button configuration (ie. Yes/No, Ok/Cancel, etc...)</summary>
      <returns>The windows DialogResult which describes the button that was selected. The following chart shows the possible return codes for each button.

<list type="table"><listheader><term>Button</term><description>Return Code</description></listheader><item><term>"Abort", "Skip All"</term><description>DialogResult.Abort</description></item><item><term>"Cancel"</term><description>DialogResult.Cancel</description></item><item><term>"No"</term><description>DialogResult.No</description></item><item><term>"OK"</term><description>DialogResult.OK</description></item><item><term>"Retry"</term><description>DialogResult.Retry</description></item><item><term>"Skip"</term><description>DialogResult.Ignore</description></item><item><term>"Yes"</term><description>DialogResult.Yes</description></item></list></returns>
      <param name="message">The text to display in the dialog box.</param>
      <param name="title">The caption of the dialog box.</param>
      <param name="btnType">The button selection that will be made available in the dialog box.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowMessage(System.String,System.Windows.Forms.Control,Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration,System.Boolean)">
      <summary>Displays a message box with a custom user control in place of the message text.</summary>
      <returns>The windows DialogResult which describes the button that was selected. The following chart shows the possible return codes for each button.

<list type="table"><listheader><term>Button</term><description>Return Code</description></listheader><item><term>"Abort", "Skip All"</term><description>DialogResult.Abort</description></item><item><term>"Cancel"</term><description>DialogResult.Cancel</description></item><item><term>"No"</term><description>DialogResult.No</description></item><item><term>"OK"</term><description>DialogResult.OK</description></item><item><term>"Retry"</term><description>DialogResult.Retry</description></item><item><term>"Skip"</term><description>DialogResult.Ignore</description></item><item><term>"Yes"</term><description>DialogResult.Yes</description></item></list></returns>
      <param name="title">The caption of the dialog box.</param>
      <param name="customContent">The control that will be shown instead of the standard message label.</param>
      <param name="btnType">The button selection that will be made available in the dialog box.</param>
      <param name="isError">True if this dialog represents an error condition. If so, the dialog will show and error system icon.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowWarning(System.String,System.String,Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration)">
      <summary>Displays an warning dialog box with the specified message and title.</summary>
      <returns>The windows DialogResult which describes the button that was selected.</returns>
      <param name="message">The warning text to display in the dialog box.</param>
      <param name="title">The Caption of the dialog box.</param>
      <param name="btnType">The button selection that will be made available in the dialog box.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Library.ShowWarning(System.String,System.String,Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration,System.Windows.Forms.IWin32Window)">
      <summary>Displays an warning dialog box with the specified message and title.</summary>
      <returns>The windows DialogResult which describes the button that was selected.</returns>
      <param name="message">The warning text to display in the dialog box.</param>
      <param name="title">The Caption of the dialog box.</param>
      <param name="btnType">The button selection that will be made available in the dialog box.</param>
      <param name="owner">Message box owner.</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Library.ApplicationConfiguration">
      <summary>Gets the service which provides the ability to configure global characteristics of the framework. The configuration options range from directory locations,
font, etc.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Library.ApplicationPreferences">
      <summary>Gets the service which provides the application with the ability to persist application state between sessions.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Library.CurrentTheme">
      <summary>Current Theme Vault Client is using.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Library.CustomUIExceptionRegistration">
      <summary>Gets the service used to register a Custom UI Exception Handler.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Library.PromptService">
      <summary>Gets the service which provides the ability to register and manage 's.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Library.ThemeChanged">
      <summary>On Vault client Theme changed event</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.EditModeOption">
      <summary>Options which control the editing capabilities of the  control.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.EditModeOption.ReadOnly">
      <summary>The control is read only.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.EditModeOption.PartialEdit">
      <summary>The control is read only, but one or more of the individual parts can be deleted.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.EditModeOption.FullEdit">
      <summary>The control supports full editing</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl">
      <summary>A enhanced textbox which allows a user to enter in multiple elements (ie. multiple file names)</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PredictPartEventArgs">
      <summary>Arguments passed to the  event</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.#ctor">
      <summary>Creates an instance of the MultiPartTextBoxControl</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BringToFront">
      <summary>Brings the control to the front of the z-order.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Contains(System.Windows.Forms.Control)">
      <summary>Retrieves a value indicating whether the specified control is a child of the control.</summary>
      <returns> if the specified control is a child of the control; otherwise, <see langword="false"></see>.</returns>
      <param name="ctl">The  to evaluate.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.CreateGraphics">
      <summary>Creates the  for the control.</summary>
      <returns>The  for the control.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.CreateObjRef(System.Type)">
      <summary>Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.</summary>
      <exception caption="" cref="T:System.Runtime.Remoting.RemotingException">This instance is not a valid remoting object.The immediate caller does not have infrastructure permission.</exception>
      <returns>Information required to generate a proxy.</returns>
      <param name="requestedType">The  of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> will reference.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)">
      <summary>Begins a drag-and-drop operation.</summary>
      <returns>A value from the  enumeration that represents the final effect that was performed during the drag-and-drop operation.</returns>
      <param name="data">The data to drag.</param>
      <param name="allowedEffects">One of the  values.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
      <summary>Supports rendering to the specified bitmap.</summary>
      <param name="bitmap">The bitmap to be drawn to.</param>
      <param name="targetBounds">The bounds within which the control is rendered.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.EndInvoke(System.IAsyncResult)">
      <summary>Retrieves the return value of the asynchronous operation represented by the  passed.</summary>
      <exception caption="" cref="T:System.ArgumentNullException">The %asyncResult% parameter value is %[LangWord]null%.The %asyncResult% object was not created by a preceding call of the %M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)% method from the same control.</exception>
      <returns>The  generated by the asynchronous operation.</returns>
      <param name="asyncResult">The  that represents a specific invoke asynchronous operation, returned when calling
<see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.FindForm">
      <summary>Retrieves the form that the control is on.</summary>
      <returns>The  that the control is on.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Focus">
      <summary>Sets input focus to the control.</summary>
      <returns> if the input focus request was successful; otherwise, <see langword="false"></see>.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.GetContainerControl">
      <summary>Returns the next  up the control's chain of parent controls.</summary>
      <returns>An , that represents the parent of the <see cref="T:System.Windows.Forms.Control" />.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.GetLifetimeService">
      <summary>Retrieves the current lifetime service object that controls the lifetime policy for this instance.</summary>
      <exception caption="" cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
      <returns>An object of type  used to control the lifetime policy for this instance.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.GetNextControl(System.Windows.Forms.Control,System.Boolean)">
      <summary>Retrieves the next control forward or back in the tab order of child controls.</summary>
      <returns>The next  in the tab order.</returns>
      <param name="ctl">The  to start the search with.</param>
      <param name="forward"> to search forward in the tab order; <see langword="false"></see> to search backward.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Hide">
      <summary>Conceals the control from the user.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.InitializeLifetimeService">
      <summary>Obtains a lifetime service object to control the lifetime policy for this instance.</summary>
      <exception caption="" cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
      <returns>An object of type  used to control the lifetime policy for this instance. This is the current lifetime service
object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the
<see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PerformAutoScale">
      <summary>Performs scaling of the container control and its children.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PointToClient(System.Drawing.Point)">
      <summary>Computes the location of the specified screen point into client coordinates.</summary>
      <returns>A  that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in client coordinates.</returns>
      <param name="p">The screen coordinate  to convert.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PointToScreen(System.Drawing.Point)">
      <summary>Computes the location of the specified client point into screen coordinates.</summary>
      <returns>A  that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in screen coordinates.</returns>
      <param name="p">The client coordinate  to convert.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PreProcessControlMessage(System.Windows.Forms.Message@)">
      <summary>Preprocesses keyboard or input messages within the message loop before they are dispatched.</summary>
      <returns>One of the  values, depending on whether
<see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> is <see langword="true"></see> or <see langword="false"></see> and whether
<see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> or <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> are <see langword="true"></see> or
<see langword="false"></see>.</returns>
      <param name="msg">A  that represents the message to process.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary>Preprocesses keyboard or input messages within the message loop before they are dispatched.</summary>
      <returns> if the message was processed by the control; otherwise, <see langword="false"></see>.</returns>
      <param name="msg">A , passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR,
and WM_SYSCHAR.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.RectangleToClient(System.Drawing.Rectangle)">
      <summary>Computes the size and location of the specified screen rectangle in client coordinates.</summary>
      <returns>A  that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="r" />, in client coordinates.</returns>
      <param name="r">The screen coordinate  to convert.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>Computes the size and location of the specified client rectangle in screen coordinates.</summary>
      <returns>A  that represents the converted <see cref="T:System.Drawing.Rectangle" />, <see cref="p" />, in screen coordinates.</returns>
      <param name="r">The client coordinate  to convert.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself and any child controls.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ResetText">
      <summary>Resets the  property to its default value (<see cref="F:System.String.Empty" />).</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
      <summary>Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</summary>
      <param name="logicalBitmap">The bitmap to scale.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ScrollControlIntoView(System.Windows.Forms.Control)">
      <summary>Scrolls the specified child control into view on an auto-scroll enabled control.</summary>
      <param name="activeControl">The child control to scroll into view.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Activates the next control.</summary>
      <returns> if a control was activated; otherwise, <see langword="false"></see>.</returns>
      <param name="ctl">The  at which to start the search.</param>
      <param name="forward"> to move forward in the tab order; <see langword="false"></see> to move backward in the tab order.</param>
      <param name="tabStopOnly"> to ignore the controls with the <see cref="P:System.Windows.Forms.Control.TabStop" /> property set to <see langword="false"></see>; otherwise, <see langword="false"></see>.</param>
      <param name="nested"> to include nested (children of child controls) child controls; otherwise, <see langword="false"></see>.</param>
      <param name="wrap"> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <see langword="false"></see>.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SendToBack">
      <summary>Sends the control to the back of the z-order.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SetAutoScrollMargin(System.Int32,System.Int32)">
      <summary>Sets the size of the auto-scroll margins.</summary>
      <param name="x">The  value.</param>
      <param name="y">The  value.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Show">
      <summary>Displays the control to the user.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SuspendLayout">
      <summary>Temporarily suspends the layout logic for the control.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Update">
      <summary>Causes the control to redraw the invalidated regions within its client area.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BeginInvoke(System.Delegate)">
      <summary>Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</summary>
      <exception caption="" cref="T:System.InvalidOperationException">No appropriate window handle can be found.</exception>
      <returns>An  that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</returns>
      <param name="method">A delegate to a method that takes no parameters.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</summary>
      <exception caption="" cref="T:System.InvalidOperationException">No appropriate window handle can be found.</exception>
      <returns>An  that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</returns>
      <param name="method">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter.</param>
      <param name="args">An array of objects to pass as arguments to the given method. This can be  if no arguments are needed.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.CreateControl">
      <summary>Forces the creation of the visible control, including the creation of the handle and any visible child controls.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)">
      <summary>Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</summary>
      <returns>The child  at the specified coordinates.</returns>
      <param name="pt">A  that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of
the control's client area.</param>
      <param name="skipValue">One of the values of , determining whether to ignore child controls of a certain type.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.GetChildAtPoint(System.Drawing.Point)">
      <summary>Retrieves the child control that is located at the specified coordinates.</summary>
      <returns>A  that represents the control that is located at the specified point.</returns>
      <param name="pt">A  that contains the coordinates where you want to look for a control. Coordinates are expressed relative to the upper-left corner of
the control's client area.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invalidate(System.Drawing.Region)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation),
and causes a paint message to be sent to the control.</summary>
      <param name="region">The  to invalidate.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invalidate(System.Drawing.Region,System.Boolean)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation),
and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</summary>
      <param name="region">The  to invalidate.</param>
      <param name="invalidateChildren"> to invalidate the control's child controls; otherwise, <see langword="false"></see>.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invalidate">
      <summary>Invalidates the entire surface of the control and causes the control to be redrawn.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invalidate(System.Boolean)">
      <summary>Invalidates a specific region of the control and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the
control.</summary>
      <param name="invalidateChildren"> to invalidate the control's child controls; otherwise, <see langword="false"></see>.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation),
and causes a paint message to be sent to the control.</summary>
      <param name="rc">A  that represents the region to invalidate.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invalidate(System.Drawing.Rectangle,System.Boolean)">
      <summary>Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation),
and causes a paint message to be sent to the control. Optionally, invalidates the child controls assigned to the control.</summary>
      <param name="rc">A  that represents the region to invalidate.</param>
      <param name="invalidateChildren"> to invalidate the control's child controls; otherwise, <see langword="false"></see>.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invoke(System.Delegate)">
      <summary>Executes the specified delegate on the thread that owns the control's underlying window handle.</summary>
      <returns>The return value from the delegate being invoked, or  if the delegate has no return value.</returns>
      <param name="method">A delegate that contains a method to be called in the control's thread context.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Invoke(System.Delegate,System.Object[])">
      <summary>Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</summary>
      <returns>An  that contains the return value from the delegate being invoked, or <see langword="null"></see> if the delegate has no return value.</returns>
      <param name="method">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter.</param>
      <param name="args">An array of objects to pass as arguments to the specified method. This parameter can be  if the method takes no arguments.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.LogicalToDeviceUnits(System.Int32)">
      <summary>Converts a Logical DPI value to its equivalent DeviceUnit DPI value.</summary>
      <returns>The resulting DeviceUnit value.</returns>
      <param name="value">The Logical value to convert.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.LogicalToDeviceUnits(System.Drawing.Size)">
      <summary>Transforms a size from logical to device units by scaling it for the current DPI and rounding down to the nearest integer value for width and height.</summary>
      <returns>The scaled size.</returns>
      <param name="value">The size to be scaled.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PerformLayout">
      <summary>Forces the control to apply layout logic to all its child controls.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PerformLayout(System.Windows.Forms.Control,System.String)">
      <summary>Forces the control to apply layout logic to all its child controls.</summary>
      <param name="affectedControl">A  that represents the most recently changed control.</param>
      <param name="affectedProperty">The name of the most recently changed property on the control.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ResumeLayout">
      <summary>Resumes usual layout logic.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ResumeLayout(System.Boolean)">
      <summary>Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</summary>
      <param name="performLayout"> to execute pending layout requests; otherwise, <see langword="false"></see>.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Scale(System.Drawing.SizeF)">
      <summary>Scales the control and all child controls by the specified scaling factor.</summary>
      <param name="factor">A  containing the horizontal and vertical scaling factors.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Select">
      <summary>Activates the control.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the bounds of the control to the specified location and size.</summary>
      <param name="x">The new  property value of the control.</param>
      <param name="y">The new  property value of the control.</param>
      <param name="width">The new  property value of the control.</param>
      <param name="height">The new  property value of the control.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>Sets the specified bounds of the control to the specified location and size.</summary>
      <param name="x">The new  property value of the control.</param>
      <param name="y">The new  property value of the control.</param>
      <param name="width">The new  property value of the control.</param>
      <param name="height">The new  property value of the control.</param>
      <param name="specified">A bitwise combination of the  values. For any parameter not specified, the current value will be used.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Validate">
      <summary>Verifies the value of the control losing focus by causing the  and <see cref="E:System.Windows.Forms.Control.Validated" /> events
to occur, in that order.</summary>
      <returns> if validation is successful; otherwise, <see langword="false"></see>. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or
<see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false"></see>.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Validate(System.Boolean)">
      <summary>Verifies the value of the control that is losing focus; conditionally dependent on whether automatic validation is turned on.</summary>
      <returns> if validation is successful; otherwise, <see langword="false"></see>. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or
<see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false"></see>.</returns>
      <param name="checkAutoValidate">If , the value of the <see cref="P:System.Windows.Forms.ContainerControl.AutoValidate" /> property is used to determine if validation should be performed;
if <see langword="false"></see>, validation is unconditionally performed.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ValidateChildren">
      <summary>Causes all of the child controls within a control that support validation to validate their data.</summary>
      <returns> if all of the children validated successfully; otherwise, <see langword="false"></see>. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or
<see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false"></see>.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
      <summary>Causes all of the child controls within a control that support validation to validate their data.</summary>
      <returns> if all of the children validated successfully; otherwise, <see langword="false"></see>. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or
<see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false"></see>.</returns>
      <param name="validationConstraints">Places restrictions on which controls have their  event raised.</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AccessibleDescription">
      <summary>Gets or sets the description of the control used by accessibility client applications.</summary>
      <returns>The description of the control used by accessibility client applications. The default is .</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AccessibleName">
      <summary>Gets or sets the name of the control used by accessibility client applications.</summary>
      <returns>The name of the control used by accessibility client applications. The default is .</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AccessibleRole">
      <summary>Gets or sets the accessible role of the control</summary>
      <exception caption="" cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the %T:System.Windows.Forms.AccessibleRole% values.</exception>
      <returns>One of the values of . The default is <see langword="Default"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AllowDrop">
      <summary>Gets or sets a value indicating whether the control can accept data that the user drags onto it.</summary>
      <returns> if drag-and-drop operations are allowed in the control; otherwise, <see langword="false"></see>. The default is <see langword="false"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Anchor">
      <summary>Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</summary>
      <returns>A bitwise combination of the  values. The default is <see langword="Top"></see> and <see langword="Left"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoScroll">
      <summary>Gets or sets a value indicating whether the container enables the user to scroll to any controls placed outside of its visible boundaries.</summary>
      <returns> if the container enables auto-scrolling; otherwise, <see langword="false"></see>. The default value is <see langword="false"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoScrollMargin">
      <summary>Gets or sets the size of the auto-scroll margin.</summary>
      <exception caption="" cref="T:System.ArgumentOutOfRangeException">The %P:System.Drawing.Size.Height% or %P:System.Drawing.Size.Width% value assigned is less than 0.</exception>
      <returns>A  that represents the height and width of the auto-scroll margin in pixels.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoScrollMinSize">
      <summary>Gets or sets the minimum size of the auto-scroll.</summary>
      <returns>A  that determines the minimum size of the virtual area through which the user can scroll.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoSize">
      <summary>This property is not relevant for this class.</summary>
      <returns> if enabled; otherwise, <see langword="false"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoSizeMode">
      <summary>Gets or sets how the control will resize itself.</summary>
      <returns>A value from the  enumeration. The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoValidate">
      <summary>Gets or sets how the control performs validation when the user changes focus to another control.</summary>
      <returns>A member of the  enumeration. The default value for <see cref="T:System.Windows.Forms.UserControl" /> is
<see cref="F:System.Windows.Forms.AutoValidate.EnablePreventFocusChange" />.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BackColor">
      <summary>Gets or sets the background color for the control.</summary>
      <returns>A  that represents the background color of the control. The default is the value of the
<see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BackgroundImage">
      <summary>Gets or sets the background image displayed in the control.</summary>
      <returns>An  that represents the image to display in the background of the control.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BackgroundImageLayout">
      <summary>Gets or sets the background image layout as defined in the  enumeration.</summary>
      <exception caption="" cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified enumeration value does not exist.</exception>
      <returns>One of the values of  (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , <see cref="F:System.Windows.Forms.ImageLayout.None" />,
<see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).
<see cref="F:System.Windows.Forms.ImageLayout.Tile" /> is the default value.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BorderStyle">
      <summary>Gets or sets the border style of the user control.</summary>
      <exception caption="" cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the %T:System.Windows.Forms.BorderStyle% values.</exception>
      <returns>One of the  values. The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.CausesValidation">
      <summary>Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</summary>
      <returns> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <see langword="false"></see>.
The default is <see langword="true"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ContextMenuStrip">
      <summary>Gets or sets the  associated with this control.</summary>
      <returns>The  for this control, or <see langword="null"></see> if there is no <see cref="T:System.Windows.Forms.ContextMenuStrip" />. The default is
<see langword="null"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Cursor">
      <summary>Gets or sets the cursor that is displayed when the mouse pointer is over the control.</summary>
      <returns>A  that represents the cursor to display when the mouse pointer is over the control.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DataBindings">
      <summary>Gets the data bindings for the control.</summary>
      <returns>A  that contains the <see cref="T:System.Windows.Forms.Binding" /> objects for the control.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DisplayRectangle">
      <summary>Gets the rectangle that represents the virtual display area of the control.</summary>
      <returns>A  that represents the display area of the control.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Dock">
      <summary>Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</summary>
      <exception caption="" cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the %T:System.Windows.Forms.DockStyle% values.</exception>
      <returns>One of the  values. The default is <see cref="F:System.Windows.Forms.DockStyle.None" />.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.EditMode">
      <summary>Gets or sets the editing capabilities.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Enabled">
      <summary>Gets or sets a value indicating whether the control can respond to user interaction.</summary>
      <returns> if the control can respond to user interaction; otherwise, <see langword="false"></see>. The default is <see langword="true"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Font">
      <summary>Gets or sets the font of the text displayed by the control.</summary>
      <returns>The  to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" />
property.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ForeColor">
      <summary>Gets or sets the foreground color of the control.</summary>
      <returns>The foreground  of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ImeMode">
      <summary>Gets or sets the Input Method Editor (IME) mode of the control.</summary>
      <exception caption="" cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the %T:System.Windows.Forms.ImeMode% enumeration values.</exception>
      <returns>One of the  values. The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Location">
      <summary>Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</summary>
      <returns>The  that represents the upper-left corner of the control relative to the upper-left corner of its container.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Margin">
      <summary>Gets or sets the space between controls.</summary>
      <returns>A  representing the space between controls.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MaximumSize">
      <summary>Gets or sets the size that is the upper limit that  can specify.</summary>
      <returns>An ordered pair of type  representing the width and height of a rectangle.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MinimumSize">
      <summary>Gets or sets the size that is the lower limit that  can specify.</summary>
      <returns>An ordered pair of type  representing the width and height of a rectangle.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Padding">
      <summary>Gets or sets padding within the control.</summary>
      <returns>A  representing the control's internal spacing characteristics.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Parts">
      <summary>Gets or sets the indivual parts represented in the textbox control</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.RightToLeft">
      <summary>Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</summary>
      <exception caption="" cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the %T:System.Windows.Forms.RightToLeft% values.</exception>
      <returns>One of the  values. The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Site">
      <summary>Gets or sets the site of the control.</summary>
      <returns>The  associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Size">
      <summary>Gets or sets the height and width of the control.</summary>
      <returns>The  that represents the height and width of the control in pixels.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.TabIndex">
      <summary>Gets or sets the tab order of the control within its container.</summary>
      <returns>The index value of the control within the set of controls within its container. The controls in the container are included in the tab order.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.TabStop">
      <summary>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</summary>
      <returns> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false"></see>. The default is <see langword="true"></see>. This property
will always return <see langword="true"></see> for an instance of the <see cref="T:System.Windows.Forms.Form" /> class.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Tag">
      <summary>Gets or sets the object that contains data about the control.</summary>
      <returns>An  that contains data about the control. The default is <see langword="null"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Text">
      <summary>Gets or sets the text value that is displayed in the control.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.UseWaitCursor">
      <summary>Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</summary>
      <returns> to use the wait cursor for the current control and all child controls; otherwise, <see langword="false"></see>. The default is <see langword="false"></see>.</returns>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Visible">
      <summary>Gets or sets a value indicating whether the control and all its child controls are displayed.</summary>
      <returns> if the control and all its child controls are displayed; otherwise, <see langword="false"></see>. The default is <see langword="true"></see>.</returns>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoSizeChanged">
      <summary>Occurs when the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.AutoValidateChanged">
      <summary>Occurs when the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BackColorChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BackgroundImageChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BackgroundImageLayoutChanged">
      <summary>Occurs when the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.BindingContextChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.CausesValidationChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Click">
      <summary>Occurs when the control is clicked.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ClientSizeChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ContextMenuStripChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ControlAdded">
      <summary>Occurs when a new control is added to the .</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ControlRemoved">
      <summary>Occurs when a control is removed from the .</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.CursorChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DockChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DoubleClick">
      <summary>Occurs when the control is double-clicked.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DpiChangedAfterParent">
      <summary>Occurs when the DPI setting for a control is changed programmatically after the DPI of its parent control or form has changed.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DpiChangedBeforeParent">
      <summary>Occurs when the DPI setting for a control is changed programmatically before a DPI change event for its parent control or form has occurred.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.EnabledChanged">
      <summary>Occurs when the  property value has changed.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.FontChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ForeColorChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ImeModeChanged">
      <summary>Occurs when the  property has changed.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.KeyDown">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.KeyPress">
      <summary>Occurs when a character. space or backspace key is pressed while the control has focus.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.KeyUp">
      <summary>Occurs when a key is released while the control has focus.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Load">
      <summary>Occurs before the control becomes visible for the first time.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.LocationChanged">
      <summary>Occurs when the  property value has changed.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ManualTextChange">
      <summary>This event is fired when a user directly changes the contents of the edit control via typing in it.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MarginChanged">
      <summary>Occurs when the control's margin changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseCaptureChanged">
      <summary>Occurs when the control loses mouse capture.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseDoubleClick">
      <summary>Occurs when the control is double clicked by the mouse.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PaddingChanged">
      <summary>Occurs when the control's padding changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.ParentChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PredictPart">
      <summary>This event is fired when a user types in the edit control. The consumer can look at the typed text and "suggest" full strings that the user might be searching
for.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PreviewKeyDown">
      <summary>Occurs before the  event when a key is pressed while focus is on this control.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.QueryAccessibilityHelp">
      <summary>Occurs when  is providing help to accessibility applications.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.RegionChanged">
      <summary>Occurs when the value of the  property changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.RightToLeftChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Scroll">
      <summary>Occurs when the user or code scrolls through the client area.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SizeChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.TabIndexChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.TabStopChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.VisibleChanged">
      <summary>Occurs when the  property value changes.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PredictPartEventArgs.MatchingParts">
      <summary>Sets the possible contents that match the value of
</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Controls.ClassicMultiPartTextBoxControl.PredictPartEventArgs.TextToMatch">
      <summary>Gets the text that the user has typed</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration">
      <summary>The choices for button arrangements in the Common Message box dialogs.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.None">
      <summary>The dialog contains a default OK button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.Abort">
      <summary>The dialog contains an Abort button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.SkipAll">
      <summary>The dialog contains a Skip, Skip All, and an OK Button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.YesNo">
      <summary>The dialog contains a Yes and a No button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.RetryCancel">
      <summary>The dialog contains a Retry and a Cancel button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.Ok">
      <summary>The dialog contains an OK button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.OkCancel">
      <summary>The dialog contains an OK and a Cancel button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.YesNoCancel">
      <summary>The dialog contains a Yes, No and a Cancel button.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.ButtonConfiguration.ContinueCancel">
      <summary>The dialog contains a Continue and a Cancel button.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.IconConfiguration">
      <summary>The choices for icons in the Common Message box dialogs.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.IconConfiguration.Error">
      <summary>The Error icon will be shown.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.IconConfiguration.Infromation">
      <summary>The Infromation icon will be shown.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.IconConfiguration.Warning">
      <summary>The Warning icon will be shown.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.IconConfiguration.Question">
      <summary>The Question icon will be shown.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer">
      <summary>Represents the answer to a prompt.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer.NotSet">
      <summary>The answer is currently not set or unknown.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer.Yes">
      <summary>The answer is "Yes".</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer.No">
      <summary>The answer is "No".</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer.YesToAll">
      <summary>The answer is "Yes To All".</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer.NoToAll">
      <summary>The answer is "No To All".</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer.Ok">
      <summary>The answer is "OK".</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer.Cancel">
      <summary>The answer is "Cancel".</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction">
      <summary>Determines when to display a prompt the user.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction.NotSet">
      <summary>The instruction type is currently not set or unknown.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction.PromptAlways">
      <summary>A prompt should always be displayed to the user.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction.PromptOncePerSession">
      <summary>A prompt should only be shown once for the current session. All other calls to

will return the users initial answer without displaying the prompt.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction.PromptNever">
      <summary>A prompt should never be displayed to the user. All calls to

will return the configured answer without showing a prompt to the user.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle">
      <summary>The choice of button arangements for the prompt dialog, meaning the set of answers available for the user to select when prompted.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle.NotSet">
      <summary>The style is currently not set or unknown.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle.YesNo">
      <summary>Prompts will display "Yes" and "No" options.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle.MultiYesNo">
      <summary>Prompts will display "Yes", "Yes To All", "No" and "No To All" options.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle.OkCancel">
      <summary>Prompts will display "OK" and "Cancel" options.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle.MultiYesNoOnly">
      <summary>Prompts will display "Yes To All" and "No To All" options.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.HelpIds">
      <summary>A list of Help Ids for all of the Dialog boxes contained in the  assembly</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem">
      <summary>This class represents an item that is to be displayed in a menu, either a top level menu or a context menu</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState">
      <summary>This represents the current state of a menu item. The state can be changed in the 
handler.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItemIds">
      <summary>A list of Menu Items Ids for context menus</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration">
      <summary>A configuration of a prompt. Contains properties affecting a prompt's behavior as configured by a user.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition">
      <summary>Contains properties and methods that describe the nature of a prompt such as the permissable responses, the text to display to the user, default settings, etc.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptRestriction">
      <summary>Represents a forbidden prompt configuration.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptSyncContext">
      <summary>Used to specify a synchronization context or workflow that a prompt is part of when making calls to
.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.HelpIds.PromptConfigurationDialog">
      <summary>Help ID for the Prompt Configuration dialog accessed via the  api</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.#ctor(System.String,System.Action{Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem,Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState},System.Action{Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem,Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState})">
      <summary>Constructs an instance of the MenuItem class</summary>
      <param name="text">The  that appears in the menu item</param>
      <param name="updateAction">An optional function delegate that will be called just before displaying the menu item. This can be used to control the visiblity and state of the menu item</param>
      <param name="executeAction">An optional function delegate that will be called when the menu item is clicked</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.#ctor(System.String,System.Object,System.Action{Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem,Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState},System.Action{Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem,Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState})">
      <summary>Constructs an instance of the MenuItem class</summary>
      <param name="text">The  that appears in the menu item</param>
      <param name="tag">Extra data associated with this menu item</param>
      <param name="updateAction">An optional function delegate that will be called just before displaying the menu item. This can be used to control the visiblity and state of the menu item</param>
      <param name="executeAction">An optional function delegate that will be called when the menu item is clicked</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.#ctor(System.String,System.Drawing.Image,System.Action{Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem,Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState},System.Action{Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem,Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState})">
      <summary>Constructs an instance of the MenuItem class</summary>
      <param name="text">The  that appears in the menu item</param>
      <param name="image">The  that appear in the menu item</param>
      <param name="updateAction">An optional function delegate that will be called just before displaying the menu item. This can be used to control the visiblity and state of the menu item</param>
      <param name="executeAction">An optional function delegate that will be called when the menu item is clicked</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.BeginGroup">
      <summary>Gets or sets whether this menu item starts a new group. When set to true, there will be a horizontal divider in the menu between this menu item and the one
that precedes it</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.ID">
      <summary>Gets or sets an ID that uniquely identifies this menu item</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.Image">
      <summary>Gets or sets the image that should be displayed in the menu item. This can be null.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.OnExecute">
      <summary>Gets or sets a function that is called when the menu item is clicked on</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.OnUpdate">
      <summary>Gets or sets a function that will be called to compute whether the menu should be shown, or enabled, or checked before it is displayed</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.SubMenuItems">
      <summary>Gets or sets a list of optional child menu items</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.Tag">
      <summary>Gets or sets optional data that can be associated with this menu item.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.Text">
      <summary>Gets or sets the text that should be displayed for the menu item</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState.IsChecked">
      <summary>Gets or sets if the menu item is in a checked state.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState.IsEnabled">
      <summary>Gets or sets if the menu item is enabled.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState.IsRootClicked">
      <summary>Gets or sets if the menu item called on root node.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItem.MenuItemState.IsVisible">
      <summary>Gets or sets whether the menu item is visible or if it should be hidden.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItemIds.Refresh">
      <summary>ID for the Refresh context menu</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItemIds.SelectAll">
      <summary>ID for the Select all context menu</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Currency.MenuItemIds.View">
      <summary>ID for the View context menu</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration.#ctor(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction)">
      <summary>Constructs a PromptConfiguration object with a user's prefered answer and instruction.</summary>
      <param name="userAnswer">The user's prefered answer. Defaults to PromptAnswer.NotSet.</param>
      <param name="instruction">The user's prefered instruction type. Defaults to PromptInstruction.PromptAlways.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration.Reset">
      <summary>Resets this PromptConfiguration to the default state.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration.ResetSession">
      <summary>Resets this PromptConfiguration's session data to the default state.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration.HideThisSession">
      <summary>Gets or sets whether prompts with this configuration should be hidden for the remainder of this session.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration.PromptInstruction">
      <summary>Gets or sets when the user should be prompted during a specific operation. The default value is
.PromptAlways.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration.UserAnswer">
      <summary>Gets or sets the user's default answer.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.#ctor(System.String,System.String,System.String,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer,System.String,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction)">
      <summary>Constructs a new PromptDefinition.</summary>
      <param name="id">The ID of the prompt.</param>
      <param name="text">The text to display to a user when prompted.</param>
      <param name="command">A string identifying the main command or workflow this prompt will be used in. Used to logically group related prompts when displayed to a user.</param>
      <param name="style">The  of this prompt.</param>
      <param name="defaultAnswer">The default answer for this prompt.</param>
      <param name="title">The text to display as the caption of the prompt dialog. If null, defaults to the application name.</param>
      <param name="escapeAnswer">The answer a prompt returns when the user escapes the prompt dialog. If set to "NotSet", uses a default excape answer based on the prompt style. See the
EscapeAnswer property for more information.</param>
      <param name="defaultInstruction">The default  to use for this prompt. Defaults to PromptInstruction.PromptAlways.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.AddRestriction(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptRestriction)">
      <summary>Adds the specified  to this prompt definition.</summary>
      <param name="restriction">The restriction to be added.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.ValidateAnswer(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptStyle,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer)">
      <summary>Checks to make sure that the specified answer is compatable with the corresponding prompt style.</summary>
      <returns>Whether or not answer is compatible with style.</returns>
      <param name="style">The prompt style to check the answer against.</param>
      <param name="answer">The prompt answer to check.</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.Command">
      <summary>Gets the prompt context that is displayed to the users.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.DefaultAnswer">
      <summary>Gets the the default answer to the prompt question, which is also the button that will be highlighted if a prompt is displayed.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.DefaultInstruction">
      <summary>Gets or sets the default instruction for this prompt. This determines when this prompt should be displayed to the user.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.EscapeAnswer">
      <summary>Gets or sets the answer that is returned when the Escape key is hit during a prompt or when the top-right close button of the prompt dialog is clicked.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.PromptId">
      <summary>Gets the unique identifier for this prompt.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.Restrictions">
      <summary>Gets the list of restricted answer and instruction combinations for this prompt.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.Style">
      <summary>Gets the style of this prompt. This determines the type of "Answer Buttons" that will be available to the user when a prompt is displayed. For example (Yes/No
or OK/Cancel).</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.SupportCancel">
      <summary>Gets whether or not this prompt supports a true cancel operation.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.Text">
      <summary>Gets the prompt text that is displayed to users.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition.Title">
      <summary>Gets the caption of the dialog box that displays the prompt to the user. If not set, this will defualt to using the application name.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptRestriction.#ctor(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptAnswer,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptInstruction)">
      <summary>Creates a PromptRestriction object.</summary>
      <param name="answer">The  that is part of an invalid configuration when paired with instruction.</param>
      <param name="instruction">The  that is part of an invalid configruation when paired with answer.</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptRestriction.Answer">
      <summary>Get the  that is part of an invalid configuration when paired with Instruction.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptRestriction.Instruction">
      <summary>Get the  that is part of an invalid configuration when paired with Answer.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IClipboardProvider">
      <summary>This interface allows a custom control to specify how it's data should be formatted on the clipboard.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IContextMenu">
      <summary>This interface allows for a custom context menu to be displayed.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomHelpProvider">
      <summary>An interface that can be implemented to integrate Help capabilities into the Vault Developer Framework.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomLogger">
      <summary>This interface allows to gather information from VDF and send it to Autodesk ADP servers.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomUIExceptionProvider">
      <summary>This interface allows it's implementor to provide custom error handling for a specific exception.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IProgressView">
      <summary>A Progress Reporter that provides tools for showing and closing the progress view.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IClipboardProvider.GetClipboardText">
      <summary>Gets the text to put on the clipboard for the control that implements this interface.</summary>
      <returns>The text to put on the clipboard.</returns>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IContextMenu.Show(System.Drawing.Point)">
      <summary>Called when the context menu should be displayed.</summary>
      <param name="p">The location to display the menu.</param>
    </member>
    <member name="E:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IContextMenu.CloseUp">
      <summary>Event handler the implementation class needs to call when the menu is closed.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomHelpProvider.CanShowHelp(System.String,System.Object)">
      <summary>Tests if help is available for a particular help topic.</summary>
      <returns>True if help is available for the topic. False otherwise</returns>
      <param name="helpId">Uniquely identifies a help topic</param>
      <param name="helpContext">Optional data that defines an instance of a workflow</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomHelpProvider.ShowHelp(System.String,System.Object)">
      <summary>This method is called to launch help for a particular help topic</summary>
      <param name="helpId">Uniquely identifies a help topic</param>
      <param name="helpContext">Optional data that defines an instance of a workflow</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomLogger.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomLogger.RecordCommand(System.String)">
      <summary>Records command</summary>
      <param name="name">Command name</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomLogger.RecordSimpleWaypoint(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Record string value with specified waypoint, state, attribute</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomLogger.RecordWaypoint(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
      <summary>Records waypoint</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomLogger.RecordWaypoint(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean)">
      <summary>Records waypoint</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomUIExceptionProvider.HandleException(System.Exception,System.Windows.Forms.DialogResult@)">
      <summary>Executes the custom handling for a specifc exception.</summary>
      <returns>True if this handler handles the exception, false otherwise.</returns>
      <param name="ex">The exception to be handled</param>
      <param name="dlgResult">The DialogResult that should be returned to the caller of <c>Autodesk.DataManagement.Client.Framework.Forms.Library.ShowError(ex)</c></param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IProgressView.Close">
      <summary>Closes the progress view</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IProgressView.Show(System.Threading.Tasks.Task,System.Threading.CancellationTokenSource,System.IntPtr)">
      <summary>Shows a modeless progress view</summary>
      <param name="task">An optional task that is executing a background process. If specified, then the progress view will automatically close when the task finishes executing</param>
      <param name="cancelToken">A cancellation token whose Cancel method will be called if the user clicks the Cancel button on the Progress View</param>
      <param name="parent">A handle to the parent window for the progress view</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Interfaces.IProgressView.ShowDialog(System.Threading.Tasks.Task,System.Threading.CancellationTokenSource)">
      <summary>Shows a modal progress view</summary>
      <param name="task">An optional task that is executing a background process. If specified, then the progress view will automatically close when the task finishes executing</param>
      <param name="cancelToken">A cancellation token whose Cancel method will be called if the user clicks the Cancel button on the Progress View</param>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService">
      <summary>This service provides the ability to configure global characteristics of a GUI application which uses the framework.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService">
      <summary>This service provides the application with the ability to persist application state between sessions.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Services.ICustomUIExceptionRegistrationService">
      <summary>This service allows for the registration of custom ui handlers for certain exceptions.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService">
      <summary>This service facilitates the management and use of prompts.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService.ApplicationFolderPath">
      <summary>Gets or sets the full path of the folder where application data will be stored.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService.ApplicationIcon">
      <summary>Gets or sets the icon that will be shown in dialog box captions.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService.CustomHelpProvider">
      <summary>Gets or sets an interface that integrates Help capabilities into the Vault Developer Framework.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService.CustomLogger">
      <summary>Gets or sets an interface that logs waypoints and commands</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService.MainFont">
      <summary>Gets or sets the font that will be used in all dialogs and controls provided by the framework.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService.MainWindow">
      <summary>Gets or sets the top level window handle of the host application</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationConfigurationService.UseLargeStatusImages">
      <summary>Gets or sets whether or not the vault browser control will use large or small status icons.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.Clear">
      <summary>Erases all of the application preferences</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.HasCategory(System.String)">
      <summary>Gets if the application has preferences grouped by the specified category name.</summary>
      <returns>True if there are preferenced grouped by <paramref name="categoryName" />. False otherwise.</returns>
      <param name="categoryName">The category name that we are inspecting for preferences.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.Load">
      <summary>Loads the preferences from storage.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.Save">
      <summary>Saves the preferences to storage.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.Set(System.String,System.String,System.Object)">
      <summary>Sets the value of an application preference.</summary>
      <param name="categoryName">The category that this preference should be bucketed under. This should not be null or empty.</param>
      <param name="prefName">The name of the preference that we are setting.</param>
      <param name="prefValue">The value of the preference that we are setting.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.Get(System.String,System.String,System.Boolean)">
      <summary>Gets the value for a boolean application preference.</summary>
      <returns>The value of the preference. If the preference does not exist, the value of <paramref name="defaultValue" /> will be returned.</returns>
      <param name="categoryName">The category that this preference is bucketed under. This should not be null or empty.</param>
      <param name="prefName">The name of the preference that we are getting.</param>
      <param name="defaultValue">The value to retrurn if the prefernece does not exist.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.Get(System.String,System.String,System.Int32)">
      <summary>Gets the value for an integer application preference.</summary>
      <returns>The value of the preference. If the preference does not exist, the value of <paramref name="defaultValue" /> will be returned.</returns>
      <param name="categoryName">The category that this preference is bucketed under. This should not be null or empty.</param>
      <param name="prefName">The name of the preference that we are getting.</param>
      <param name="defaultValue">The value to retrurn if the prefernece does not exist.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.Get(System.String,System.String,System.String)">
      <summary>Gets the value for a string application preference.</summary>
      <returns>The value of the preference. If the preference does not exist, the value of <paramref name="defaultValue" /> will be returned.</returns>
      <param name="categoryName">The category that this preference is bucketed under. This should not be null or empty.</param>
      <param name="prefName">The name of the preference that we are getting.</param>
      <param name="defaultValue">The value to retrurn if the prefernece does not exist.</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Services.IApplicationPreferencesService.ProfileName">
      <summary>An optional profile which bundles a set of similar preferences together</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.ICustomUIExceptionRegistrationService.GetProvider(System.Exception)">
      <summary>Gets the Custom UI Exception Provider associated with the specified
exception.</summary>
      <returns>A custom provider associated with this exception, or null if there is not an associated handler.</returns>
      <param name="ex">The exception to get a custom handler for.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.ICustomUIExceptionRegistrationService.RegisterProvider(System.Type,System.String,Autodesk.DataManagement.Client.Framework.Forms.Interfaces.ICustomUIExceptionProvider)">
      <summary>Associates a Custom UI Exception Provider with a specific exception.</summary>
      <param name="exceptionType">The type of the exception (ie. typeof(VaultServiceErrorException)).</param>
      <param name="errorCode">The error code which triggers the custom handler (ie. "301"). If null or empty, then the <paramref name="provider" /> will be executed for all exceptions of the specified
<paramref name="exceptionType" />.</param>
      <param name="provider">The provider that gets executed when an exception which matches the <paramref name="exceptionType" /> and <paramref name="errorCode" /> is processed via <c>Autodesk.DataManagement.Client.Framework.Forms.Library.ShowError(ex)</c>.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService.GetConfiguration(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition)">
      <summary>Get the current  for a
<see cref="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition" />.</summary>
      <returns>The current PromptConfiguration Class for a prompt.</returns>
      <param name="promptDef">The PromptDefinition Class to get the configuration for.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService.GetPromptDefinitions">
      <summary>Returns a collecetion of all of the 's managed by the prompt service.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService.RegisterPrompt(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition,System.Boolean)">
      <summary>Registers a prompt definition with the prompt service.</summary>
      <param name="promptDef">The PromptDefinition to register</param>
      <param name="replaceExisting">Whether or not previously registered prompt should be replaced when attempting to register another prompt with a matching ID. If false, an exception will be
thrown when attemping to register a prompt with an ID that was already registered. Defaults to false.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService.ReloadConfigurations">
      <summary>Reloads all of Prompt Configurations managed by PromptService to their local values.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService.ResetConfigurations(System.Boolean)">
      <summary>Resets all of the 's managed by this dialog to their default configuration.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService.SetConfiguration(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition,Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptConfiguration,System.Boolean)">
      <summary>Sets the  for a specified
<see cref="T:Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition" />.</summary>
      <param name="promptDef">The  to associate the configuration with.</param>
      <param name="config">The  to associate with the definition.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Services.IPromptService.UnregisterPrompt(Autodesk.DataManagement.Client.Framework.Forms.Currency.PromptDefinition)">
      <summary>Removes a previously registered prompt from the prompt service. Once removed, it will not show up in any list of available prompts presented to the user.</summary>
      <param name="promptDef">The ID of the PromptItem to remove</param>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.IconType">
      <summary>Describes the different icons available to display on the Restrictions dialog.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.IconType.Error">
      <summary>The standard Windos error icon, an X in a red circle.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.IconType.Warning">
      <summary>The standard Windows warning icon, an exclamation mark in a yellow triangle.</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.IconType.Info">
      <summary>The standard Windows information icon, a lower-case I in a blue circle.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentType">
      <summary>Specifies the type of parent for the window</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentType.NoParent">
      <summary>The window has no parent and will therefor, be displayed centered in the screen</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentType.UseCurrentlyActiveWindow">
      <summary>The currently active window will be used as the parent for the window that is about to be displayed. The new window will generally be centered on top of the
currently active window</summary>
    </member>
    <member name="F:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentType.UseSpecificWindow">
      <summary>Use a user-specified window as the parent of the window that is about to be displayed</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings">
      <summary>Options for configuring the

workflow.</summary>
    </member>
    <member name="T:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings">
      <summary>The WindowSettings class is used to configure the window parent and location for a particular GUI workflow.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.#ctor(System.String,Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.IconType)">
      <summary>Creates an instance of the ShowRestrictionsSettings class.</summary>
      <param name="caption">The title text for the restrictions dialog.</param>
      <param name="icon">The icon to be displayed on the dialog.</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.AddRestriction(Autodesk.DataManagement.Client.Framework.Currency.Restriction)">
      <summary>Adds a restriction to the collection of restrictions displayed by the dialog.</summary>
      <param name="restriction">The  to be added</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.AllowContinuation(System.String,System.Boolean)">
      <summary>Configures the GUI for continuation mode, and allows a question to be provided. Continuation mode is designed to let the user complete a batch operation when
only some of the entities are affected by restrictions.</summary>
      <param name="continueQuestion">A question to be displayed below the description set by
</param>
      <param name="allowCancel">Optional paramenter that adds a "Cancel" button in addition to Yes/No</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.AllowOverride(System.String,System.String,System.Boolean)">
      <summary>Configues the GUI for override mode, and allows a question to be provided. Override mode is designed to let the user complete an operation that would normally
be blocked by a restriction.</summary>
      <param name="overrideCheckboxLabel">The label put next to the override checkbox</param>
      <param name="overrideQuestion">Optional question to be displayed below the descritpion set by
</param>
      <param name="checkboxChecked">Option paramenter that specifies if the override checkbox should start checked or unchecked</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.SetDescription(System.String,System.String)">
      <summary>Sets the description that is displayed on the main part of the dialog. If all the restrictions affect the same object, the singular description will be used.
Otherwise the dialog falls back to the multiple description.</summary>
      <param name="singular">This string is used if all the restrictions provided to the dialog affect the same object. If it contains the string.Format() specifier '{0}', the object's
name will be swapped for it.</param>
      <param name="multiple">Optional parameter that provides the description for when multiple restricted objects are displayed.</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.GridLabel">
      <summary>Gets or sets the label that is displayed above the list of restrictions.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.ReasonColumnCaption">
      <summary>Gets or sets the caption for the column which displays the restrictionReason. Should not null or empty to show the column.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.RestrictedObjectNameColumnCaption">
      <summary>Gets or sets the caption for the column which displays the name of the restricted object</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.RestrictionColumnCaption">
      <summary>Gets or sets the cpation for the column which displays the restrction</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.Restrictions">
      <summary>Gets the collection of restrictions that the dialog has been provided.</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.ShowRestrictionsSettings.ShowDetailsArea">
      <summary>Gets or sets if the dialog is expanded to show the list of restrictions.</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.#ctor">
      <summary>Constructs an instance of thw WindowSettings class</summary>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.SetParent(Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentType)">
      <summary>Configure the parent window for the case where there is either No Parent or the case where the Default Parent should be chosen</summary>
      <param name="alg">The configuration for the parent window</param>
    </member>
    <member name="M:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.SetParent(Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentType,System.IntPtr)">
      <summary>Sets the parent window for a form that is about to be displayed</summary>
      <param name="alg">Determines how the parent window will be chosen</param>
      <param name="parent">if <paramref name="alg" /> is UseSpecificWindow, then this is the window that should be used as the parent</param>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentAlgorithm">
      <summary>Gets the style that configures how the parent window will be chosen</summary>
    </member>
    <member name="P:Autodesk.DataManagement.Client.Framework.Forms.Settings.WindowSettings.ParentWindowHandle">
      <summary>Gets a user-specified parent window handle</summary>
    </member>
  </members>
</doc>